---
// libraries
import classnames from 'classnames';

// components
import Title from '@components/Title.astro';

/**
 * This component accepts the following:
 * - <slot />
 * - <slot name="feature-secondary" />
 * 
 * The secondary feature does not show when the primary feature is centered.
 * 
 */
interface Props {
    feature?: string;
    title: string;
    description: string;
    /** 
     * Secondary feature will not show in `center` alignment.
     * `right` align has no effect on mobile.
     */
    align?: 'left' | 'center' | 'right';
    /** makes it full width */
    isFullWidth?: boolean;
    /** The secondary feature does not normally show in mobile */
    responsive?: {
        showSecondaryInMobile?: boolean;
        isSecondaryImage?: boolean;
    }
}

const {
    feature,
    title,
    description,
    align = 'left',
    isFullWidth = false,
    responsive = {
        showSecondaryInMobile: false,
        isSecondaryImage: false
    }
} = Astro.props;

const showLeftSideContent = align === 'left' && !isFullWidth;
const showRightSideContent = align === 'right' && !isFullWidth;

const sectionClasses = classnames({
    'feature-section': true,
});
const primaryClasses = classnames({
    'feature-primary': true,
    [align]: true,
    ['full-width']: isFullWidth,
})
const secondaryClasses = classnames({
    'feature-secondary': true,
    'visible': responsive.showSecondaryInMobile,
    'feature-secondary-image': responsive.isSecondaryImage,
});
---

<section class={sectionClasses}>
    {showRightSideContent && (
        <div class={secondaryClasses}>
            <slot name="feature-secondary" />
        </div>
    )}
    <div class={primaryClasses}>
        {feature && <Title variant={2}>{feature}</Title>}
        <Title variant={1} noPadding>{title}</Title>
        <div class="feature-description">{description}</div>
        <slot />
    </div>
    {showLeftSideContent && (
        <div class={secondaryClasses}>
            <slot name="feature-secondary" />
        </div>
    )}
</section>

<style>
    .feature-section {
        margin: 32px 0;
        display: flex;
        flex-direction: column;
    }
    .feature-primary {
        display: flex;
        flex-direction: column;
    }
    .feature-secondary {
        display: none;
    }
    .visible {
        display: block;
    }
    @media screen and (max-width: 1024px) {
        .feature-secondary-image {
            width: 35%;
        }
    }
    @media screen and (min-width: 640px) {
        .feature-section {
            flex-direction: row;
        }
        .feature-secondary:not(.visible) {
            display: flex;
            position: relative;
            left: 0;
            overflow-x: visible;
        }
    }
    .center {
        margin-left: auto;
        margin-right: auto;
        align-items: center;
        text-align: center;
    }
    .right {
        margin-left: auto;
    }
    .full-width {
        max-width: 100%;
    }
    .feature-description {
        margin: 20px 0;
    }
    @media screen and (min-width: 640px) {
        .feature-primary:not(.full-width) {
            min-width: 50%;
        }
    }
</style>