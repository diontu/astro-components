---
// For any onclick items, assign an id and in the parent attach a "click" event listener.
interface Props {
    id?: string
    variant:
        | 'primary'
        | 'secondary'
        | 'tertiary'
        | 'secondary-dark'
        | 'tertiary-dark'
    shape: 'pill' | 'round' | 'square'
    size: 'sm' | 'md' | 'lg'
    href?: string
    class?: string
}

const { id: idName, variant, href, shape, size, class: className } = Astro.props
const id = idName ?? ''
---

<!-- replicate the buttons... not ideal -->{
    !href && (
        <button
            id={id ?? ''}
            class={`button ${variant} ${size} ${shape} ${className}`}
        >
            <slot />
        </button>
    )
}
{
    href && (
        <a href={href}>
            <button
                id={id ?? ''}
                class={`button ${variant} ${size} ${shape} ${className}`}
            >
                <slot />
            </button>
        </a>
    )
}

<style>
    .button {
        font-family: inherit;
        border-style: none;
        cursor: pointer;
        transition: all 0.2s ease-in-out;
    }
    .sm {
        height: 32px;
        font-size: var(--text-sm);
        padding: 6px 16px;
    }
    .md {
        height: 36px;
        font-size: var(--text-sm);
        padding: 8px 16px;
    }
    .lg {
        height: 48px;
        font-size: var(--text-sm);
        padding: 14px 20px;
    }
    .pill.sm {
        border-radius: var(--border-radius-button-sm-pill);
    }
    .pill.md {
        border-radius: var(--border-radius-button-md-pill);
    }
    .pill.lg {
        border-radius: var(--border-radius-button-lg-pill);
    }
    .round.sm {
        border-radius: var(--border-radius-button-sm-round);
    }
    .round.md {
        border-radius: var(--border-radius-button-md-round);
    }
    .round.lg {
        border-radius: var(--border-radius-button-lg-round);
    }

    .primary {
        background-color: var(--primary-color);
        color: var(--text-color-inverted);
    }
    .primary:hover {
        background-color: var(--secondary-color);
    }

    .secondary {
        border: 1px solid var(--primary-color);
        background-color: var(--bg-color);
        color: var(--primary-color);
    }
    .secondary:hover {
        filter: brightness(90%);
    }
    .secondary-dark {
        color: var(--bg-color);
        background-color: #ffffff40;
    }
    .secondary-dark:hover {
        opacity: 0.7;
    }
    .tertiary {
        background-color: var(--color-0);
        color: var(--text-color);
    }
    .tertiary:hover {
        opacity: 0.7;
    }
    .tertiary-dark {
        color: var(--bg-color);
        background: transparent;
    }
    .tertiary-dark:hover {
        opacity: 0.7;
    }
</style>
